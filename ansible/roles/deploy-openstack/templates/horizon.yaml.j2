---
{% if openstack.release == "train" %}
images:
  tags:
    db_init: docker.io/openstackhelm/heat:train-ubuntu_bionic
    db_drop: docker.io/openstackhelm/heat:train-ubuntu_bionic
    horizon_db_sync: docker.io/openstackhelm/horizon:train-ubuntu_bionic
    horizon: docker.io/openstackhelm/horizon:train-ubuntu_bionic
{% endif %}
{% if openstack.release == "ussuri" %}
images:
  tags:
    db_init: docker.io/openstackhelm/heat:ussuri-ubuntu_bionic
    db_drop: docker.io/openstackhelm/heat:ussuri-ubuntu_bionic
    horizon_db_sync: docker.io/openstackhelm/horizon:ussuri-ubuntu_bionic
    horizon: docker.io/openstackhelm/horizon:ussuri-ubuntu_bionic
{% endif %}
pod:
  replicas:
    server: {{openstack.horizon.replicas}}
endpoints:
  dashboard:
    host_fqdn_override:
      public:
{% if openstack.horizon.endpoints.useDirectPublicDomain %}
        host: {{openstack.publicDomain}}
{% else %}
        host: {{openstack.horizon.endpoints.publicURLPrefix}}.{{openstack.publicDomain}}
{% endif %}
{% if openstack.tls.enabled and openstack.tls.letsEncrypt.enabled %}
        tls:
          key: dummy
          crt: dummy
          ca: dummy
{% endif %}
    scheme:
      default: http
{% if openstack.tls.enabled %}
      public: https
    port:
      api:
        public: 443
{% endif %}
{% if openstack.tls.enabled and openstack.tls.letsEncrypt.enabled %}
    certs:
      horizon:
        secretName: horizon-tls
        issuerRef:
          name: {{letsEncrypt.issuerName}}
          kind: Issuer
{% endif %}
  identity:
    name: keystone
    auth:
      admin:
        region_name: {{openstack.region}}
        username: admin
        password: {{openstack.keystone.auth.admin.password}}
        project_name: admin
        user_domain_name: default
        project_domain_name: default
  oslo_db:
    auth:
      admin:
        username: root
        password: {{openstack.mariadb.auth.admin.password}}
        secret:
          tls:
            internal: mariadb-tls-direct
      horizon:
        username: horizon
        password: {{openstack.horizon.auth.db.password}}

network:
  dashboard:
    ingress:
      public: true
      classes:
        namespace: "nginx"
        cluster: "nginx-cluster"
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
        kubernetes.io/ingress.class: nginx
{% if openstack.tls.enabled and openstack.tls.useCertManager %}
        kubernetes.io/tls-acme: "true"
#        nginx.ingress.kubernetes.io/backend-protocol: "https"
{% endif %}
{% if openstack.tls.enabled and openstack.tls.letsEncrypt.enabled %}
        cert-manager.io/issuer: "{{letsEncrypt.issuerName}}"
{% endif %}
manifests:
  secret_ingress_tls: false
