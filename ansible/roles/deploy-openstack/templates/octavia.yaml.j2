---
pod:
  replicas:
    api: {{openstack.octavia.api.replicas}}
    worker: {{openstack.octavia.worker.replicas}}
    housekeeping: {{openstack.octavia.housekeeping.replicas}}
endpoints:
  load_balancer:
    host_fqdn_override:
      public:
        host: {{openstack.octavia.endpoints.publicURLPrefix}}.{{openstack.publicDomain}}
{% if openstack.tls.enabled and openstack.tls.letsEncrypt.enabled %}
        tls:
          key: dummy
          crt: dummy
{% if letsEncrypt.issuerName == "letsencrypt-staging" %}
          ca: |
{{letsEncrypt.staging.rootCACert |b64decode| indent( width=12, indentfirst=True) }}
{% else %}
          ca: |
{{letsEncrypt.prod.rootCACert | b64decode | indent( width=12, indentfirst=True) }}
{% endif %}
{% endif %}
    scheme:
      default: http
{% if openstack.tls.enabled %}
      public: https
{% endif %}
    port:
      api:
        public: 443
{% if openstack.tls.enabled and openstack.tls.letsEncrypt.enabled %}
    certs:
      octavia:
        secretName: octavia-tls
        issuerRef:
          name: {{letsEncrypt.issuerName}}
          kind: Issuer
{% endif %} 
  identity:
    name: keystone
    auth:
{% if openstack.tls.enabled %}
      cacert: /tmp/openstack_ca.crt
{% endif %}
      admin:
        region_name: {{openstack.region}}
        username: admin
        password: {{openstack.keystone.auth.admin.password}}
        project_name: admin
        user_domain_name: default
        project_domain_name: default
      octavia:
        role: admin
        region_name: {{openstack.region}}
        username: octavia
        password: {{openstack.octavia.auth.service.password}}
        project_name: service
        user_domain_name: service
        project_domain_name: service
      test:
        role: admin
        region_name: {{openstack.region}}
        username: test
        password: {{openstack.octavia.auth.octaviaTest.password}}
        project_name: test
        user_domain_name: service
        project_domain_name: service
  oslo_db:
    auth:
      admin:
        username: root
        password: {{openstack.mariadb.auth.admin.password}}
      octavia:
        username: octavia
        password: {{openstack.octavia.auth.db.password}}
  oslo_messaging:
    auth:
      admin:
        username: rabbitmq
        password: {{openstack.rabbitmq.auth.admin.password}}
      octavia:
        username: octavia
        password: {{openstack.octavia.auth.messaging.password}}
network:
  api:
    ingress:
      public: true
      classes:
        namespace: "nginx"
        cluster: "nginx-cluster"
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
        kubernetes.io/ingress.class: nginx
{% if openstack.tls.enabled and openstack.tls.useCertManager %}
        kubernetes.io/tls-acme: "true"
#        nginx.ingress.kubernetes.io/backend-protocol: "https"
{% endif %}
{% if openstack.tls.enabled and openstack.tls.letsEncrypt.enabled %}
        cert-manager.io/issuer: "{{letsEncrypt.issuerName}}"
{% endif %}
manifests:
  secret_ingress_tls: false
