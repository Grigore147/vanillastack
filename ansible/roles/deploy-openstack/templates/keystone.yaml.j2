---
{% if openstack.release == "train" %}
images:
  tags:
    bootstrap: "docker.io/openstackhelm/heat:train-ubuntu_bionic"
    db_init: "docker.io/openstackhelm/heat:train-ubuntu_bionic"
    db_drop: "docker.io/openstackhelm/heat:train-ubuntu_bionic"
    keystone_api: "docker.io/openstackhelm/keystone:train-ubuntu_bionic"
    keystone_bootstrap: "docker.io/openstackhelm/heat:train-ubuntu_bionic"
    keystone_credential_rotate: "docker.io/openstackhelm/keystone:train-ubuntu_bionic"
    keystone_credential_setup: "docker.io/openstackhelm/keystone:train-ubuntu_bionic"
    keystone_db_sync: "docker.io/openstackhelm/keystone:train-ubuntu_bionic"
    keystone_domain_manage: "docker.io/openstackhelm/keystone:train-ubuntu_bionic"
    keystone_fernet_rotate: "docker.io/openstackhelm/keystone:train-ubuntu_bionic"
    keystone_fernet_setup: "docker.io/openstackhelm/keystone:train-ubuntu_bionic"
    ks_user: "docker.io/openstackhelm/heat:train-ubuntu_bionic"
{% endif %}
{% if openstack.release == "ussuri" %}
images:
  tags:
    bootstrap: "docker.io/openstackhelm/heat:ussuri-ubuntu_bionic"
    db_init: "docker.io/openstackhelm/heat:ussuri-ubuntu_bionic"
    db_drop: "docker.io/openstackhelm/heat:ussuri-ubuntu_bionic"
    keystone_api: "docker.io/openstackhelm/keystone:ussuri-ubuntu_bionic"
    keystone_bootstrap: "docker.io/openstackhelm/heat:ussuri-ubuntu_bionic"
    keystone_credential_rotate: "docker.io/openstackhelm/keystone:ussuri-ubuntu_bionic"
    keystone_credential_setup: "docker.io/openstackhelm/keystone:ussuri-ubuntu_bionic"
    keystone_db_sync: "docker.io/openstackhelm/keystone:ussuri-ubuntu_bionic"
    keystone_domain_manage: "docker.io/openstackhelm/keystone:ussuri-ubuntu_bionic"
    keystone_fernet_rotate: "docker.io/openstackhelm/keystone:ussuri-ubuntu_bionic"
    keystone_fernet_setup: "docker.io/openstackhelm/keystone:ussuri-ubuntu_bionic"
    ks_user: "docker.io/openstackhelm/heat:ussuri-ubuntu_bionic"
{% endif %}

pod:
  replicas:
    api: {{openstack.keystone.api.replicas}}
endpoints:
  identity:
    host_fqdn_override:
      public:
        host: {{openstack.keystone.endpoints.publicURLPrefix}}.{{openstack.publicDomain}}
{% if openstack.tls.enabled and openstack.tls.letsEncrypt.enabled %}
        tls:
          key: dummy
          crt: dummy
          ca: dummy
{% endif %}
    scheme:
      default: http
{% if openstack.tls.enabled %}
      public: https
    port:
      api:
        public: 443
{% endif %}
{% if openstack.tls.enabled and openstack.tls.letsEncrypt.enabled %}
    certs:
      keystone:
        secretName: keystone-tls
        issuerRef:
          name: {{openstack.tls.letsEncrypt.issuerName}}
          kind: Issuer
{% endif %}
    auth:
      admin:
        password: {{openstack.keystone.auth.admin.password}}
        region: {{openstack.region}}
      keystone-test:
        password: {{openstack.keystoneTest.auth.admin.password}}
        region: {{openstack.region}}
  oslo_db:
    auth:
      admin:
        username: root
        password: {{openstack.mariadb.auth.admin.password}}
        secret:
          tls:
            internal: mariadb-tls-direct
      keystone:
        username: keystone
        password: {{openstack.keystone.auth.db.password}}
  oslo_messaging:
    auth:
      admin:
        username: rabbitmq
        password: {{openstack.rabbitmq.auth.admin.password}}
      keystone:
        username: keystone
        password: {{openstack.keystone.auth.messaging.password}}
network:
  api:
    ingress:
      public: true
      classes:
        namespace: "nginx"
        cluster: "nginx-cluster"
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
        kubernetes.io/ingress.class: nginx
{% if openstack.tls.enabled and openstack.tls.useCertManager %}
        kubernetes.io/tls-acme: "true"
#        nginx.ingress.kubernetes.io/backend-protocol: "https"
{% endif %}
{% if openstack.tls.enabled and openstack.tls.letsEncrypt.enabled %}
        cert-manager.io/issuer: "{{openstack.tls.letsEncrypt.issuerName}}"
{% endif %}
manifests:
  secret_ingress_tls: false
#  service_ingress_api: false
#  service_api: false
