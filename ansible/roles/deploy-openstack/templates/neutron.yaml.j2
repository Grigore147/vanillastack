---
{% if openstack.release == "train" %}
images:
  tags:
    bootstrap: "docker.io/openstackhelm/heat:train-ubuntu_bionic"
    db_init: "docker.io/openstackhelm/heat:train-ubuntu_bionic"
    db_drop: "docker.io/openstackhelm/heat:train-ubuntu_bionic"
    ks_user: "docker.io/openstackhelm/heat:train-ubuntu_bionic"
    ks_service: "docker.io/openstackhelm/heat:train-ubuntu_bionic"
    ks_endpoints: "docker.io/openstackhelm/heat:train-ubuntu_bionic"
    neutron_db_sync: "docker.io/openstackhelm/neutron:train-ubuntu_bionic"
    neutron_dhcp: "docker.io/openstackhelm/neutron:train-ubuntu_bionic"
    neutron_l3: "docker.io/openstackhelm/neutron:train-ubuntu_bionic"
    neutron_l2gw: "docker.io/openstackhelm/neutron:train-ubuntu_bionic"
    neutron_linuxbridge_agent: "docker.io/openstackhelm/neutron:train-ubuntu_bionic"
    neutron_metadata: "docker.io/openstackhelm/neutron:train-ubuntu_bionic"
    neutron_openvswitch_agent: "docker.io/openstackhelm/neutron:train-ubuntu_bionic"
    neutron_server: "docker.io/openstackhelm/neutron:train-ubuntu_bionic"
    neutron_rpc_server: "docker.io/openstackhelm/neutron:train-ubuntu_bionic"
    neutron_bagpipe_bgp: "docker.io/openstackhelm/neutron:train-ubuntu_bionic"
{% endif %}
{% if openstack.release == "ussuri" %}
images:
  tags:
    bootstrap: "docker.io/openstackhelm/heat:ussuri-ubuntu_bionic"
    db_init: "docker.io/openstackhelm/heat:ussuri-ubuntu_bionic"
    db_drop: "docker.io/openstackhelm/heat:ussuri-ubuntu_bionic"
    ks_user: "docker.io/openstackhelm/heat:ussuri-ubuntu_bionic"
    ks_service: "docker.io/openstackhelm/heat:ussuri-ubuntu_bionic"
    ks_endpoints: "docker.io/openstackhelm/heat:ussuri-ubuntu_bionic"
    neutron_db_sync: "docker.io/openstackhelm/neutron:ussuri-ubuntu_bionic"
    neutron_dhcp: "docker.io/openstackhelm/neutron:ussuri-ubuntu_bionic"
    neutron_l3: "docker.io/openstackhelm/neutron:ussuri-ubuntu_bionic"
    neutron_l2gw: "docker.io/openstackhelm/neutron:ussuri-ubuntu_bionic"
    neutron_linuxbridge_agent: "docker.io/openstackhelm/neutron:ussuri-ubuntu_bionic"
    neutron_metadata: "docker.io/openstackhelm/neutron:ussuri-ubuntu_bionic"
    neutron_openvswitch_agent: "docker.io/openstackhelm/neutron:ussuri-ubuntu_bionic"
    neutron_server: "docker.io/openstackhelm/neutron:ussuri-ubuntu_bionic"
    neutron_rpc_server: "docker.io/openstackhelm/neutron:ussuri-ubuntu_bionic"
    neutron_bagpipe_bgp: "docker.io/openstackhelm/neutron:ussuri-ubuntu_bionic"
{% endif %}

network:
  interface:
    tunnel: {{openstack.neutron.tunnelInterface}}
labels:
  agent:
    dhcp:
      node_selector_key: openstack-helm-node-class
      node_selector_value: primary
    l3:
      node_selector_key: openstack-helm-node-class
      node_selector_value: primary
    metadata:
      node_selector_key: openstack-helm-node-class
      node_selector_value: primary
pod:
  replicas:
    server: {{openstack.neutron.server.replicas}}
conf:
  neutron:
    DEFAULT:
      l3_ha: {{openstack.neutron.l3.ha}}
      max_l3_agents_per_router: {{openstack.neutron.l3.maxAgentsPerRouter}}
      l3_ha_network_type: {{openstack.neutron.l3.haNetworkType}}
      dhcp_agents_per_network: {{openstack.neutron.l3.dhcpAgents}}
  plugins:
    ml2_conf:
      ml2_type_flat:
        flat_networks: public
    openvswitch_agent:
      agent:
        tunnel_types: {{openstack.neutron.l3.haNetworkType}}
      ovs:
        bridge_mappings: public:br-ex
### WORKAROUND
    tungstenfabric:
      - dummy: true
    tf_vnc_api_lib:
      - dummy: true
### WORKAROUND END
  auto_bridge_add:
    br-ex: {{openstack.neutron.extInterface}}
#    br-tun: {{openstack.neutron.tunnelInterface}}
endpoints:
  network:
    host_fqdn_override:
      public: {{openstack.neutron.endpoints.publicURLPrefix}}.{{openstack.publicDomain}}
