---
- name: Install neccessary packages
  apt:
    pkg:
    - gnupg
    - git
    - python-pip
    - python3-pip
    - python-kubernetes
    - python3-kubernetes
    update_cache: yes

- name: make sure, domain search is not set
  lineinfile:
    regexp: '^(.*)search(.*)$'
    state: absent
    path: /etc/resolv.conf

- name: Add key from keyserver
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: "{{ item }}"
  loop:
    - 93C4A3FD7BB9C367
    - 8BECF1637AD8C79D
  retries: 3
  delay: 1
  register: result
  until: result is success

- name: Add key for cri-o repos
  apt_key:
    url: "{{ item }}"
  loop: 
    - "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.18:/1.18.3/Debian_Unstable/Release.key"
    - "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_Unstable/Release.key"
    - "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_10/Release.key"
    - "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
    - "https://baltocdn.com/helm/signing.asc"
    - "https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key"
  retries: 3
  delay: 1
  register: result
  until: result is success

- name: Add repositories
  apt_repository:
    repo: "{{ item }}"
    state: present
  loop:
    - "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main"
    - "deb https://apt.kubernetes.io/ kubernetes-xenial main"
    - "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_10/ /"
    - "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.18:/1.18.3/Debian_Unstable/ /"
    - "deb https://baltocdn.com/helm/stable/debian/ all main"
    - "deb https://packages.cloudfoundry.org/debian stable main"
  retries: 3
  delay: 1
  register: result
  until: result is success

- name: Install packages
  apt:
    pkg: 
      - ansible
      - needrestart
      - helm
      - cf-cli
      - vim
    update_cache: yes
  retries: 3
  delay: 1
  register: result
  until: result is success

- name: Upgrade all packages to the latest version
  apt:
    name: "*"
    state: latest

- name: get latest kube version
  shell: apt-cache madison kubeadm | grep {{ kubernetes.version }} | head -1 | tr -s ' ' | cut -d ' ' -f4
  register: apt_output

- name: get kubeversion
  set_fact:
    versions: "{{ apt_output.stdout }}"

- name: Install packages
  apt:
    pkg:
      - "kubelet={{ versions }}"
      - "kubeadm={{ versions }}"
      - "kubectl={{ versions }}"
      - "cri-o"
      - libgtk2.0-0
    update_cache: yes

- name: mark packages as hold
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - "kubelet"
    - "kubeadm"
    - "kubectl"
    - "cri-o"

- name: configure crio
  lineinfile:
    path: /etc/crio/crio.conf
    regexp: '^(.*)conmon =(.*)$'
    line: 'conmon = "/usr/bin/conmon"'
    backrefs: yes

## Bug needs to be tracked
- name: remove seccomp from crio
  lineinfile:
    path: /etc/crio/crio.conf
    regexp: '^(.*)seccomp_profile =(.*)$'
    line: 'seccomp_profile = ""'
    backrefs: yes

- name: fix runc runtime path in crio config
  lineinfile:
    path: /etc/crio/crio.conf
    regexp: '^  runtime_path =(.*)$'
    line: '  runtime_path = "/usr/sbin/runc"'
    backrefs: yes

- name: configure kubelet
  lineinfile:
    path: /etc/default/kubelet
    regexp: '^(.*)KUBELET_EXTRA_ARGS(.*)$'
    line: 'KUBELET_EXTRA_ARGS=--cgroup-driver=systemd --container-runtime=remote --container-runtime-endpoint="unix:///var/run/crio/crio.sock"'
    create: true

