---
- name: Check if kubeadm has already run
  stat:
    path: "/etc/kubernetes/pki/ca.key"
  register: kubeadm_ca

- name: generate join token
  block:
  - name: create join token
    command: kubeadm token generate
    register: generated_token

  - name: save token
    lineinfile:
      path: /tmp/cluster_vars.yml
      regexp: '^(.*)token:(.*)$'
      line: "token: {{ generated_token.stdout }}"
      create: true
  delegate_to: bastion
  when: token is not defined or token|length <1

- name: generate certificate key
  block:
  - name: create certificate key
    command: kubeadm alpha certs certificate-key
    register: generated_certificate_key

  - name: save certificate key
    lineinfile:
      path: /tmp/cluster_vars.yml
      regexp: '^(.*)certificate_key(.*)$'
      line: "certificate_key: {{ generated_certificate_key.stdout }}"
      create: true
  when: certificate_key is not defined or certificate_key|length <1

- name: Include certificate var
  include_vars:
    file: /tmp/cluster_vars.yml
  delegate_to: bastion
  when: certificate_key is not defined or certificate_key|length <1

- name: Init Cluster if not existant
  command: > 
    kubeadm init --service-cidr {{ service_cidr }} \
                 --pod-network-cidr {{ pod_network_cidr }} \
                 --token {{ token }} \
                 --control-plane-endpoint {{ loadbalancer_fqdn }}:6443 
                 --upload-certs \                
                 --apiserver-bind-port 8443 \
                 --certificate-key {{ certificate_key }} \
                 --ignore-preflight-errors=Port-6443 \
                 {{ kubeadm_opts }} \
                 {{ init_opts }}
  register: init_cluster 
  when: not kubeadm_ca.stat.exists or reset_cluster==true

- name: Copy admin.conf to Home directory
  when: init_cluster is succeeded
  copy:
    src: "{{ kubeadmin_config }}"
    dest: ".kube/config"
    owner: "debian"
    group: "debian"
    mode: 0755
    remote_src: true

- name: fetch kube config
  fetch:
    src: /home/{{ ansible_env.SUDO_USER }}/.kube/config
    dest: /home/{{ ansible_env.SUDO_USER }}/.kube/
    flat: yes
 
