---
- name: debug through ansible.env
  debug: var=ansible_env

- name: make sure, "{{ item }}" directory exists
  file:
    path: "/home/{{ ansible_env.SUDO_USER }}/{{ item }}"
    state: directory
    mode: '750'
    owner: debian
    group: debian
  loop:
    - .kube

- name: Install neccessary packages
  apt:
    pkg:
    - gnupg
    - git
    - python-pip
    - python3-pip
    - python-kubernetes
    - python3-kubernetes
    update_cache: yes

- name: Add key for Ansiblerepo
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: "{{ item }}"
  loop:
    - 93C4A3FD7BB9C367
    - 8BECF1637AD8C79D

- name: Add second key for cri-o repo
  apt_key:
    url: "{{ item }}"
  loop: 
    - "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.18:/1.18.3/Debian_Unstable/Release.key"
    - "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_Unstable/Release.key"
    - "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_10/Release.key"
    - "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
    - "https://baltocdn.com/helm/signing.asc"

- name: Add ansible repository
  apt_repository:
    repo: "{{ item }}"
    state: present
  loop:
    - "deb https://ppa.launchpad.net/ansible/ansible/ubuntu trusty main"
    - "deb https://apt.kubernetes.io/ kubernetes-xenial main"
    - "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_10/ /"
    - "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.18:/1.18.3/Debian_Unstable/ /"
    - "deb https://baltocdn.com/helm/stable/debian/ all main"

- name: Install packages
  apt:
    pkg: 
      - ansible
      - needrestart
      - helm
    update_cache: yes

- name: generate join token
  block:
  - name: create join token
    command: kubeadm token generate
    register: generated_token
  
  - name: save token
    lineinfile:
      path: /home/debian/vanillastack/ansible/roles/deploy-kubernetes/vars/main.yml
      regexp: '^(.*)token:(.*)$'
      line: "token: {{ generated_token.stdout }}"
      create: true
  run_once: true
  when: token is not defined or token|length <1

- name: generate certificate key
  block:
  - name: create certificate key
    command: kubeadm alpha certs certificate-key
    register: generated_certificate_key
  
  - name: save certificate key
    lineinfile:
      path: /home/debian/vanillastack/ansible/roles/deploy-kubernetes/vars/main.yml
      regexp: '^(.*)certificate_key(.*)$'
      line: "certificate_key: {{ generated_certificate_key.stdout }}"
      create: true
  run_once: true
  when: certificate_key is not defined or certificate_key|length <1

- name: add hosts entry
  lineinfile:
    regexp: '^(.*){{ loadbalancer_fqdn }}(.*)$'
    path: /etc/hosts
    line: "{{ loadbalancer_virtualip }} {{ loadbalancer_fqdn }}"

- name: update hosts file
  lineinfile:
    dest: /etc/hosts
    regexp: '{{ hostvars[item].ansible_host }}.*{{ item }}$'
    line: "{{ hostvars[item].ansible_host }} {{item}}"
    state: present
  with_items: "{{ groups.all }}"

- name: Upgrade all packages to the latest version
  apt:
    name: "*"
    state: latest

- name: extend var lvm
  lvol:
    vg: "{{ inventory_hostname_short }}-vg"
    lv: var
    size: 100%FREE
    resizefs: true
    shrink: no
