---
- name: get latest kube version
  shell: apt-cache madison kubeadm | grep {{ kube_version }} | head -1 | tr -s ' ' | cut -d ' ' -f4
  register: apt_output

- name: get kubeversion
  set_fact:
    versions: "{{ apt_output.stdout }}"

- name: Install packages
  apt:
    pkg: 
      - "kubelet={{ versions }}"
      - "kubeadm={{ versions }}"
      - "kubectl={{ versions }}"
      - "cri-o-{{ kube_version }}"
      - libgtk2.0-0
    update_cache: yes

- name: mark packages as hold
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - "kubelet"
    - "kubeadm"
    - "kubectl"
    - "cri-o-{{ kube_version }}"


- name: configure crio
  lineinfile:
    path: /etc/crio/crio.conf
    regexp: '^(.*)conmon =(.*)$'
    line: 'conmon = "/usr/bin/conmon"'
    backrefs: yes

- name: configure kubelet
  lineinfile:
    path: /etc/default/kubelet 
    regexp: '^(.*)KUBELET_EXTRA_ARGS(.*)$'
    line: 'KUBELET_EXTRA_ARGS=--cgroup-driver=systemd --container-runtime=remote --container-runtime-endpoint="unix:///var/run/crio/crio.sock"'
    create: true

- name: make sure, registry is not set
  file:
    path: /etc/containers/registries.conf
    state: absent

- name: add container repos
  blockinfile:
    path: "{{ item }}"
    block: |
      [registries.search]
      registries = ['docker.io', 'registry.fedoraproject.org', 'registry.access.redhat.com', '{{ global.registry }}']
    create: true
  with_items:
    - /etc/containers/registries.conf


- name: remove cni configs
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/etc/cni/net.d/100-crio-bridge.conf"
    - "/etc/cni/net.d/200-loopback.conf"

- name: Make sure crio service is running 
  systemd:
    state: restarted
    enabled: true
    name: crio

- name: Make sure crio service is running
  systemd:
    state: restarted
    enabled: true
    name: kubelet
      
- name: load modules
  modprobe: 
    name: "{{ item }}"
    state: present
  with_items:
    - overlay
    - br_netfilter

- name: create bridge traffic config
  sysctl:
    name: "{{ item }}"
    value: '1'
    sysctl_file: /etc/sysctl.d/k8s.conf
    reload: yes
  with_items:
    - net.bridge.bridge-nf-call-ip6tables
    - net.bridge.bridge-nf-call-iptables
    - net.ipv4.ip_forward

- name: load Modules
  lineinfile:
    path: /etc/modules
    line: "{{ item }}"      
    create: true
  with_items:
     - br_netfilter
     -  overlay

- name: Disable Swap
  command: swapoff -a

- name: Disable swap permanently, persist reboots
  replace:
    path: /etc/fstab
    regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
    replace: '#\1\2\3swap\4'

- name: check if reboot is required
  command: needrestart
  ignore_errors: true
  register: reboot_hint

- name: "Reboot machine to get latest updates"
  reboot:
  when: reboot_hint.rc == 1


