---
- name: helm installation kubecf
  block:
  - name: Increment the retry count
    set_fact:
      retry_count: "{{ 0 if retry_count is undefined else retry_count | int + 1 }}"

  - name: delete namespaces
    k8s:
      state: absent
      name: "{{ item }}"
      api_version: v1
      kind: namespace
      wait: true
    loop:
      - "kubecf"
      - "cf-operator"
      - "eirini"

  - name: install CF repository
    community.kubernetes.helm_repository:
      name: cloudfoundry
      repo_url: https://harbor.cloudical.net/chartrepo/vanillastack-cloudfoundry
        
  - name: Deploy latest version of CloudFoundry
    community.kubernetes.helm:
      name: cf-operator
      chart_ref: cloudfoundry/cf-operator
      release_namespace: cf-operator
      values: 
        global:
          singleNamespace:
            name: kubecf
      create_namespace: true
      wait: true

  - name: install Kubecf
    community.kubernetes.helm:
      name: kubecf
      chart_ref: cloudfoundry/kubecf
      release_namespace: kubecf
      values: "{{ lookup('template', 'kubecf-values.yaml.j2') | from_yaml }}"  
    register: kubecf_install

  rescue:
    - fail: 
        msg: Maximum retries exceeded
      when: retry_count | int == 5 

    - include_tasks: main.yml

- name: wait for db to come up
  command: kubectl wait --namespace=kubecf --for=condition=ready pods -l app=database --timeout=10s
  retries: 180
  delay: 10
  register: result
  until: result.rc == 0

- name: reset eirini pod
  command: kubectl delete --wait po -n kubecf -l name=eirini-routing

- name: wait for eirini router to come up
  command: >
    kubectl wait --namespace=kubecf --for=condition=ready \
    pods -l name=eirini-routing --timeout=10s
  retries: 180
  delay: 10
  register: result
  until: result.rc == 0

- name: wait for router sts to be existant    
  command: kubectl wait --namespace=kubecf --for=condition=podscheduled pods router-0 --timeout=10s
  retries: 180
  delay: 10
  register: result
  until: result.rc == 0
   
- name: Patch RouterStatefullset
  command: >
    kubectl patch sts -n kubecf router \
    --patch '{"spec": {"template": {"spec": {"initContainers": [{"name": "bpm-pre-start-gorouter","securityContext": {"privileged": true}}]}}}}'

- name: wait for pods to be ready
  command: >
    kubectl wait --namespace=kubecf --for=condition=ready \
    pods -l app.kubernetes.io/component=router --timeout=10s
  retries: 360
  delay: 10
  register: result
  until: result.rc == 0

- debug:
    msg: "{{ kubecf_install.stdout_lines }}"

    
