apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: prometheus-operator
    meta.helm.sh/release-namespace: monitoring
  labels:
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
  name: prometheus-operator-grafana
  namespace: monitoring
data:
  grafana.ini: |
    [server]
    domain = grafana.{{ clusterTLDomain }}
    root_url = https://grafana.{{ clusterTLDomain }}
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
{% if vanillaservices.keycloak_enabled %}
    [auth]
    oauth_auto_login = true
    disable_login_form = true
    [auth.basic]
    enabled = false
    [auth.generic_oauth]
    name: "Vanillastack Single Sign On"
    signout_redirect_url = https://keycloak.{{ clusterTLDomain }}/auth/realms/{{ clusterTLDomain }}/protocol/openid-connect/logout?redirect_uri=https%3A%2F%2Fgrafana.{{ clusterTLDomain }}/login/generic_oauth
    role_attribute_path = "contains(roles[*], 'admin') && 'Admin' || contains(roles[*], 'editor') && 'Editor' || contains(roles[*], 'viewer') && 'Viewer'"
    enabled = {{ vanillaservices.keycloak_enabled }}
    client_id = grafana.{{ clusterTLDomain | default('localdomain') }}
    client_secret = "{{ grafana_client_secret }}"
    auth_url = https://keycloak.{{ clusterTLDomain }}/auth/realms/{{ clusterTLDomain }}/protocol/openid-connect/auth
    token_url = https://keycloak.{{ clusterTLDomain }}/auth/realms/{{ clusterTLDomain }}/protocol/openid-connect/token
    api_url = https://keycloak.{{ clusterTLDomain }}/auth/realms/{{ clusterTLDomain }}/protocol/openid-connect/userinfo
    allowed_domains = {{ clusterTLDomain }} vanillastack
    allow_sign_up = true
    tls_skip_verify_insecure = true
    tls_client_cert =
    tls_client_key =
    tls_client_ca =
{% endif %}

