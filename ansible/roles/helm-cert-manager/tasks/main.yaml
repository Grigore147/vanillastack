---
- name: "create Cert-Manager namespace"
  k8s:
    name: "{{ certmanager.namespace }}"
    api_version: v1
    kind: Namespace
    state: present

- name: "add helm repository - cert-manager"
  shell: "helm repo add jetstack https://charts.jetstack.io"

- name: "update helm repositories"
  shell: "helm repo update"

- name: "run helm install cert-manager"
  shell: "helm upgrade --install cert-manager jetstack/cert-manager --namespace {{ certmanager.namespace }} --version {{certmanager.chartVersion}} --set installCRDs=true"
  retries: 3
  delay: 10
  register: result
  until: result.rc == 0

- name: Copy LetsEncrypt Issuer
  template:
    src: letsencrypt.yaml.j2
    dest: /tmp/letsencrypt.yaml
  
- name: Create LetsEncrypt Issuer
  block:
    - name: Apply LetsEncrypt Issuer
      k8s:
        src: /tmp/letsencrypt.yaml
        state: present
        namespace: "{{ certmanager.namespace }}"
      register: letsencryptIssuer
  rescue: 
    - name: restart cert-manager
      shell: "kubectl delete po -n {{certmanager.namespace}} -l app=cert-manager"
    - name: restart cert-manager webhook
      shell: "kubectl delete po -n {{certmanager.namespace}} -l app=webhook"
    - name: Wait for pods to be ready
      shell: kubectl wait -n {{certmanager.namespace}} --for=condition=Ready pods --timeout=60s --all 

- name: Retry LetsEncrypt Issuer
  k8s:
    src: /tmp/letsencrypt.yaml
    state: present
    namespace: "{{ certmanager.namespace }}"
  when: letsencryptIssuer is not succeeded
  register: letsencryptIssuerRetry
  until: letsencryptIssuerRetry is succeeded
  delay: 20
  retries: 60

- name: Cleanup LetsEncrypt Issuer
  file:
    path: /tmp/letsencrypt.yaml
    state: absent 
