all:
  master:
    hosts:
      vanilla-master-1 ansible_host=135.181.48.21 ansible_user=debian
      vanilla-master-2 ansible_host=135.181.48.22 ansible_user=debian
      vanilla-master-3 ansible_host=135.181.48.23 ansible_user=debian
  worker:
    hosts:
      vanilla-worker-1 ansible_host=135.181.48.24 ansible_user=debian
      vanilla-worker-2 ansible_host=135.181.48.25 ansible_user=debian
      vanilla-worker-3 ansible_host=135.181.48.26 ansible_user=debian
  storage:
    hosts:
      vanilla-worker-1 ansible_host=135.181.48.24 ansible_user=debian
      vanilla-worker-2 ansible_host=135.181.48.25 ansible_user=debian
      vanilla-worker-3 ansible_host=135.181.48.26 ansible_user=debian
  compute:
    hosts:
      vanilla-worker-1 ansible_host=135.181.48.24 ansible_user=debian
      vanilla-worker-2 ansible_host=135.181.48.25 ansible_user=debian
  kube_cluster:
    children:
      master:
      worker:
  certmanager:
    enabled: true
    namespace: "cert-manager"
    chartVersion: "v0.16.1"
  global:
    registry: harbor.cloudical.net
    uuid: {}
  ingress:
    namespace: nginx-ingress
    enabled: true
  letsEncrypt:
    # possible issuer: "letsencrypt-staging" or "letsencrypt-prod"
    issuerName: "letsencrypt-staging"
    issuerEmail: "testing@test.vanillastack.cloudical.net"
    staging:
      rootCACert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZBVENDQXVtZ0F3SUJBZ0lSQUtjOVpLQkFTeW15NVRMT0VwNTdOOTh3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQXd3UFJtRnJaU0JNUlNCU2IyOTBJRmd4TUI0WERURTJNRE15TXpJeU5UTTBObG9YRFRNMgpNRE15TXpJeU5UTTBObG93R2pFWU1CWUdBMVVFQXd3UFJtRnJaU0JNUlNCU2IyOTBJRmd4TUlJQ0lqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBK3BZSHZRdzVpVTN2MmIzaU51WU5LWWdzV0Q2S1U3YUoKZGlkZHRaUXhTV1l6VUkzVTBJMVVzUlBUeG5oVGlmcy9NOU5XNFpsVjEzWmZCN0FQd0M4b3FLT0lpd283SXdsUAp4ZzBWS2d5eitrVDhSSmZZcjY2UFBJWVAwZnBUZXU0MkxwTUorQ0tvOXNicGdWTkRaTjJ6L3FpWHJSTlgvVnRHClRrUFY3YTQ0Zlo1YkhIVnJ1QXh2RG55bHBReEpvYnRDQldsSlNzYklSR0ZITWMyejg4ZVV6OU5tSU9XVUtHR2oKRW1QNzZ4OE9mUkhwSXB1eFJTQ2puMCtpOStoUjJzaUlPcGNNT0dkKzQwdVZKeGJSUlA1WlhuVUZhMmZGNUZXZApPMHUwUlBJOEhPTjBvdmhyd1BKWSs0ZVdLa1F6eUM2MTFvTFBZR1E0RWJpZlJzVHNDeFVacXlVdVN0R3lwOG9hCmFvU0tmRjZYMCtLekdnd3ducmpSVFVwSWwxOUE5MktSME5vbzZoNjIyT1grNHNaaU8vSlFka3VYNXcvSHVwSzAKQTBNMFdTTUN2VTZHT2hqR290bWgyVlRFSndISFk0K1RVazBpUVlSdHYxY3JPTmtseVpvQVFQRDc2aENyQzhDcgpJYmdzWkxmVE1DOFRXVW9NYnlVRGd2Z1lrSEtNb1BtMFZHVlZ1d3BSS0p4djcrMndYTytwaXZyclVsMlE5ZlBlCktrMDU1bkpMTVY5eVBVZGlnOG90aFVLclJmU3hsaTk0NkFFVjFlRU9oeGRkZkV3QkUzTHQyeG4waGhpSWVkYmIKRnRmLzVrRVdGWmtYeVVtTUpLOFJhNzZLdXMyQUJ1ZVVWRWNaNDhoclJyMUhmMU45bjU5VmJUVWFYZ2VpWkE1MApxWGYyYnltRTZGOENBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdFR01BOEdBMVVkRXdFQi93UUZNQU1CCkFmOHdIUVlEVlIwT0JCWUVGTUVtZEtTS1JLRG0raUFvMkZ3am1rV0lHSG5nTUEwR0NTcUdTSWIzRFFFQkN3VUEKQTRJQ0FRQkNQdzc0TTlYL1h4MDRLMVZBRVMzeXBnUVlINWJmOUZYVkRyd2hSRlNWY2tyaWEvN2RNem9GNXdsbgp1cTlOR3Nqa2trRGcxN0FvaGNRZHI4YWxINEx2UGR4cEtyM0JqcHZFY21icUY4eEgrTWJiZVVFbm1iU2ZMSThICnNlZnVoWEY5QUYvOWlZdnBWTkM4Rm1KME9oaVZ2MTNWZ01RdzBDUktrYnRqWkJmOHhhRWhxL1lxeFdWc2dPam0KZG01Q0FRMlgwYVg3NTAyeDh3WVJnTW5aaEE1Z29DMXpWV0JWQWk4eWhobWxoaG9EVWZnMTdjWGttYUpDNXBEZApvZW5aOU5WaFc4ZURiMDNNRkNyV052SWg4OUREZUNHV3VXZkRsdERxMG4zb3d5TDBJZVNuN1JmcFNjbHB4Vm1WCi81M2prWWp3SWd4SUc3R3N2MExLTWJzZjZRZEJjVGpodmZaeU1JcEJSa1RlM3p1SGQyZmVLelk5bEVrYlJ2UlEKemJoNFBzNVlCbkc2Q0tKUFRiZTJoZmkzbmhudy9NeUVtRjN6YjBoenZMV05yUjlYVzNpYmIyb0wzNDI0WE93YwpWanJUU0NMek85UnY2czV3aTAzcW9XdktBUVFBRWxxVFlSSGh5bkozdzZ3dXZLWUY1emNaRjNNRG5yVkdMYmgxClE5ZVBSRkJDaVhPUTZ3UExvVWhycmJaOExwRlVGWURYSE10WU03UDlzYzlJQVdvT05YUkVKYU8wOHpnRnRNcDQKOGl5SVlVeVFBYnN2eDhvRDJNOGtSdnJJUlNyUkpTbDZMOTU3YjRBRmlMSVEvR2dWMmN1cnMwamplN0VkeDM0YwppZFd3MVZyZWp0d2Nsb2JxTk1WdEczRWlQVUlwSkdwYk1jSmdiaUxTbUtrcnZRdEduZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    prod:
      rootCACert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lSQUlJUXo3RFNRT05aUkdQZ3UyT0Npd0F3RFFZSktvWklodmNOQVFFTEJRQXcKVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaApjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NVFV3TmpBME1URXdORE00CldoY05NelV3TmpBME1URXdORE00V2pCUE1Rc3dDUVlEVlFRR0V3SlZVekVwTUNjR0ExVUVDaE1nU1c1MFpYSnUKWlhRZ1UyVmpkWEpwZEhrZ1VtVnpaV0Z5WTJnZ1IzSnZkWEF4RlRBVEJnTlZCQU1UREVsVFVrY2dVbTl2ZENCWQpNVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFLM29KSFAwRkRmem01NHJWeWdjCmg3N2N0OTg0a0l4dVBPWlhvSGozZGNLaS92VnFidllBVHlqYjNtaUdiRVNUdHJGai9SUVNhNzhmMHVveG15RisKMFRNOHVrajEzWG5mczdqL0V2RWhta3ZCaW9aeGFVcG1abXlQZmp4d3Y2MHBJZ2J6NU1EbWdLN2lTNCszbVg2VQpBNS9UUjVkOG1VZ2pVK2c0cms4S2I0TXUwVWxYaklCMHR0b3YwRGlOZXdOd0lSdDE4akE4K28rdTNkcGpxK3NXClQ4S09FVXQrend2by83VjNMdlN5ZTByZ1RCSWxESENOQXltZzRWTWs3QlBaN2htL0VMTktqRCtKbzJGUjNxeUgKQjVUMFkzSHNMdUp2VzVpQjRZbGNOSGxzZHU4N2tHSjU1dHVrbWk4bXhkQVE0UTdlMlJDT0Z2dTM5NmozeCtVQwpCNWlQTmdpVjUrSTNsZzAyZFo3N0RuS3hIWnU4QS9sSkJkaUIzUVcwS3RaQjZhd0JkcFVLRDlqZjFiMFNIelV2CktCZHMwcGpCcUFsa2QyNUhON3JPckZsZWFKMS9jdGFKeFFaQktUNVpQdDBtOVNUSkVhZGFvMHhBSDBhaG1iV24KT2xGdWhqdWVmWEtuRWdWNFdlMCtVWGdWQ3dPUGpkQXZCYkkrZTBvY1MzTUZFdnpHNnVCUUUzeERrM1N6eW5UbgpqaDhCQ05BdzFGdHhOclFIdXNFd01GeEl0NEk3bUtaOVlJcWlveW1DekxxOWd3UWJvb01EUWFIV0JmRWJ3cmJ3CnFIeUdPMGFvU0NxSTNIYWFkcjhmYXFVOUdZL3JPUE5rM3NnckRRb28vL2ZiNGhWQzFDTFFKMTNoZWY0WTUzQ0kKclU3bTJZczZ4dDBuVVc3L3ZHVDFNME5QQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUJCakFQQmdOVgpIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSNXRGbm1lN2JsNUFGemdBaUl5QnBZOXVtYmJqQU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBVlI5WXFieXlxRkRRRExIWUdta2dKeWtJckdGMVhJcHUrSUxsYVMvVjlsWkwKdWJoekVGblRJWmQrNTB4eCs3TFNZSzA1cUF2cUZ5RldoZkZRRGxucnp1Qlo2YnJKRmUrR25ZK0VnUGJrNlpHUQozQmViWWh0RjhHYVYwbnh2d3VvNzd4L1B5OWF1Si9HcHNNaXUvWDErbXZvaUJPdi8yWC9xa1NzaXNSY09qL0tLCk5GdFkyUHdCeVZTNXVDYk1pb2d6aVV3dGhEeUMzKzZXVndXNkxMdjN4TGZIVGp1Q3ZqSElJbk56a3RIQ2dLUTUKT1JBekk0Sk1QSitHc2xXWUhiNHBob3dpbTU3aWF6dFhPb0p3VGR3Sng0bkxDZ2ROYk9oZGpzbnZ6cXZIdTdVcgpUa1hXU3RBbXpPVnl5Z2hxcFpYakZhSDNwTzNKTEYrbCsvK3NLQUl1dnRkN3UrTnhlNUFXMHdkZVJsTjhOd2RDCmpOUEVscHpWbWJVcTRKVWFnRWl1VERrSHpzeEhwRktWSzdxNCs2M1NNMU45NVIxTmJkV2hzY2RDYitaQUp6VmMKb3lpM0I0M25qVE9RNXlPZisxQ2NlV3hHMWJRVnM1WnVmcHNNbGpxNFVpMC8xbHZoK3dqQ2hQNGtxS09KMnF4cQo0Umdxc2FoRFlWdlRIOXc3alhieUxlaU5kZDhYTTJ3OVUvdDd5MEZmLzl5aTBHRTQ0WmE0ckYyTE45ZDExVFBBCm1SR3VuVUhCY25XRXZnSkJRbDluSkVpVTBac252Z2MvdWJoUGdYUlI0WHEzN1owajRyN2cxU2dFRXp3eEE1N2QKZW15UHhnY1l4bi9lUjQ0L0tKNEVCcytsVkRSM3ZleUptK2tYUTk5YjIxLytqaDVYb3MxQW5YNWlJdHJlR0NjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  kubernetes:
    loadBalancer:
      virtualIP: 135.181.48.19
      clusterDomain: test.vanillastack.cloudical.net
    clusterName: kube
    version: "1.19"
    crioVersion: "1.18"
  cloudfoundry:
    enabled: true
    storageclass: rook-ceph-block
    coreDomain: "cf.{{ kubernetes.loadBalancer.clusterDomain }}"
  stratos:
    enabled: true
    adminpassword: 4JOA4l8DK7Sr
    coreDomain: "stratos.{{ kubernetes.loadBalancer.clusterDomain }}"  
  guacamole:
    imageTag: 202009100849
    enabled: true
    namespace: guacamole
    coreDomain: "guacamole.{{ kubernetes.loadBalancer.clusterDomain }}"
    postgres:
      maxConnections: 400
      backup:
        enabled: false 
        cronjob: "30 */2 * * *"
      version: "12"
      replicas: "2"
      size: "20Gi"
  postgresOperator:
    chartRepo: "https://{{global.registry}}/chartrepo/vanillastack"
    enabled: true
    chartName: "postgres-operator"
    chartVersion: "1.5.0"
    namespace: "postgres-operator"
    backup:
      enabled: false
      s3:
        accessKey: nul
        secretKey: nul
        regionName: nul
        endpoint: nul
        bucketName: nul
      cron: "30 00 * * *"
  harbor:
    enabled: true
    chartVersion: 1.4.0
    namespace: harbor
    ingress:
      coreDomain: "harbor.test.vanillastack.cloudical.net"
      notaryDomain: "notary.test.vanillastack.cloudical.net"
    tls:
      enabled: true
    portal:
      replicas: 1
    core:
      replicas: 1
    jobservice:
      replicas: 1
      persistence:
        storageClass: rook-ceph-block
        size: 15Gi
    registry:
      replicas: 1
      persistence:
        storageClass: rook-ceph-block
        size: 10Gi
    chartmuseum:
      enabled: true
      replicas: 1
      persistence:
        storageClass: rook-ceph-block
        size: 5Gi
    clair:
      enabled: true
      replicas: 1
    trivy:
      enabled: true
      replicas: 1
      persistence:
        storageClass: rook-ceph-block
        size: 5Gi
    notary:
      enabled: true
      replicas: 1
    auth:
      password: 02ZVPokFHXPHfSfkfQGCWIfmJ
      # secret lenght must be 16
      secret: p1zX2AazSCwtUfmv
    redis:
      chartVersion: 10.8.1
      password: zP7GPoCnFNa6XiVnsLVJ3jJgw
      persistence:
        storageClass: "rook-ceph-block"
        size: 8Gi
    postgres:
      size: "20Gi"
      replicas: 2
      version: "12"
      maxConnections: 400
      backup:
        enabled: false
        cronjob: "30 */2 * * *"
  openstack:
    enabled: false
    namespace: openstack
    chartRepo: "https://{{global.registry}}/chartrepo/vanillastack-openstack"
    publicDomain: "{{ kubernetes.loadBalancer.clusterDomain }}"
    publicProto: "http"
    region: RegionOne
    # releases available:
    # - train
    # - ussuri (not tested)
    release: "stein"
    tls:
      enabled: true
      useCertManager: true
      letsEncrypt:
        enabled: true
    mariadb:
      enabled: true
      chartName: mariadb
      chartVersion: 0.1.0
      createService: false
      replicas: 3
      persistence:
        enabled: true
        storageClass: "rook-ceph-block"
        diskSize: 30Gi
      auth:
        admin:
          password: nBR46Yx5oKoaORLdHXC675emg 
        sst:
          password: g1tCeWCl5JlnN4KfII2w1rjWD
        audit:
          password: MF91daYvdqnJSALlPNHa0y2ox
        exporter:
          password: KvK63FDIqTdCKrFiknVHCIVtC
    rabbitmq:
      enabled: true
      chartName: rabbitmq
      chartVersion: 0.1.0
      createService: false
      replicas: 2
      persistence:
        enabled: true
        storageClass: "rook-ceph-block"
        diskSize: 20Gi
      auth:
        admin:
          password: QaBQRbiSh7LVcmUfr066OxOoc
    memcached:
      enabled: true
      chartName: memcached
      chartVersion: 0.1.0
      createService: false
      replicas: 1
    ceph:
      enabled: true
      rook:
        namespace: "rook-ceph"
        fsid: "602a7124-e4ba-43fd-a6f7-00bd574329d8"
    barbican:
      enabled: true
      chartName: barbican
      chartVersion: 20200903
      createService: true
      api:
        replicas: 2
      endpoints:
        publicURLPrefix: "barbican"
      auth:
        service:
          password: WIyJB5ucjhRDBi7JDLN4xPsZF
        db:
          password: SLyl35ZTcLs1HSx1MLEEKrTo3
        messaging:
          password: ygj41kywzWQL0304n64C6bneW
    cinder:
      enabled: true
      chartName: cinder
      chartVersion: 20200903
      createService: true
      rbd:
        enabled: true
        rbdPool: cinder.volumes
        rbdUser: cinder
        rbdBackupUser: cinder-backup
        rbdBackupPool: cinder.backups
      api:
        replicas: 2
        v1Enabled: false
      volume:
        replicas: 1
        osapiVolumeWorkers: 1
      scheduler:
        replicas: 1
      backup:
        enabled: false
        replicas: 1
      endpoints:
        publicURLPrefix: "cinder"
      auth:
        service:
          password: Hb8M4cmki6BxsvgYZ4efBRfzN
        db:
          password: iyg1TU0Q6Kbe1GQ74cpIvP002
        messaging:
          password: r5L4CXlnthbhOqrvkgMmmV4Lx
        cinderTest:
          password: CsXVpYJ1isCfJ8Lu97CY25s7W
    congress:
      enabled: false
      chartName: congress
      chartVersion: 20200903
      createService: true
      api:
        replicas: 2
      policyEngine:
        replicas: 2
      datasource:
        replicas: 1
    designate:
      enabled: false
      chartName: designate
      chartVersion: 20200903
      createService: true
      auth:
        service: 
          password: WvusP3DVawNqM4VIhPsEhptyj
    glance:
      enabled: true
      chartName: glance
      chartVersion: 20200903
      createService: true
      defaultBackend: rbd
      rbd:
        enabled: true
        cephAppName: glance
        rbdPool: glance.images
        rbdUser: glance
        showImageDirectUrl: true
      api:
        replicas: 2
        v1Enabled: false
        version: 2
      registry:
        replicas: 2
        v2Enabled: true
      endpoints:
        publicURLPrefix: "glance"
      auth:
        service:
          password: L1hHckv7JulXzAWr2lCyKPwMp
        db:
          password: 83bpLt7JyuBNjLWjI1SPdrxex
        messaging:
          password: Vc1aHXgW79mz2xdXV7Yk7v1NB
        glanceTest:
          password: AkaQ342jULeq7sWV7ayT2bu6d
        radosgw:
          password: woK1JLHAz6SujFQsvoPMKm6wH
    heat:
      enabled: true
      chartName: heat
      chartVersion: 20200903
      createService: true
      api:
        replicas: 2
      cfn:
        replicas: 2
      cloudwatch:
        replicas: 2
      engine:
        replicas: 2
      endpoints:
        publicURLPrefix: "heat"
        cfPublicURLPrefix: "heat-cfn"
      auth:
        service:
          password: Fv2ZXIEb5V5jZTpyA856vkJhB
        db:
          password: K29Kr9Uf2xJiovkixnWf4b27V
        messaging:
          password: 1R8B1FepIqiaqQrHVS0ncuXpP
        heatTest:
          password: Qcfl85lFlryeBzC9kU63sMy1e
        heatDomain:
          password: EQgwc4yPg855CdOrbpf1WbBxx
        serviceTrustee:
          password: nCWZSoGhojIJf0zKWS7V3t2mg
    horizon:
      enabled: true
      chartName: horizon
      chartVersion: 20200903
      createService: true
      replicas: 2
      endpoints:
        useDirectPublicDomain: false
        publicURLPrefix: "horizon"
      auth:
        db:
          password: 6jswYdW52JEN0y7oRZ8NLHwCq
    ironic:
      enabled: false
      chartName: ironic
      chartVersion: 20200903
      createService: true
      auth:
        service: 
          password: bC3FON5hMXFaJbAEDARV6EfBG
    keystone:
      enabled: true
      chartName: keystone
      chartVersion: 20200903
      createService: true
      endpoints:
        publicURLPrefix: "keystone"
      api:
        replicas: 2
      auth:
        admin:
          password: sn0JGJ2NXuBUrfyoHYRDnKNY3
        keystoneTest:
          password: zxQoRVj9dx3ghYDoeDtrIhaMt
        db:
          password: 1b2g39k10Qcs6QjugmOt7guPb
        messaging:
          password: CdvLDh2fp6WnciVxHsSnrWhOd
    libvirt:
      enabled: true
      chartName: libvirt
      chartVersion: 0.1.0
      createService: false
    mistral:
      enabled: true
      chartName: mistral
      chartVersion: 20200903
      createService: true
      api:
        replicas: 2
      engine:
        replicas: 2
      eventEngine:
        replicas: 2
      executor:
        replicas: 2
      endpoints:
        publicURLPrefix: "mistral"
      auth:
        service:
          password: P5nK12zDB5U93hSpistGtyEU4
        mistralTest:
          password: 1MYMa9AeaqhTSPQ7qotTU4Tu1
        db:
          password: 4rammB7aZCdEusubYnOK6PgJI
        messaging:
          password: vRK5KyiuRKxAjy8Z1ySDFuDGS
    neutron:
      enabled: true
      chartName: neutron
      chartVersion: 20200913
      createService: true
      extInterface: "enp3s0"
      tunnelInterface: "enp2s0"
      server:
        replicas: 2
      l3:
        ha: false
        maxAgentsPerRouter: 1
        haNetworkType: vxlan
        dhcpAgents: 2
      endpoints:
        publicURLPrefix: "neutron"
      auth:
        service:
          password: 1H4c6JURsRRDB6tl4FemkmKU3
        db:
          password: XoGM7g5N6Ft0qc8cHTBfvWwFb
        messaging:
          password: b45MH3eKVBnXoKEufojIPquEX
        neutronTest:
          password: 7bs4vXXfk58oea8txB1w8Atqu
    nova:
      enabled: true
      chartName: nova
      chartVersion: 20200903
      createService: true
      apiMetadata:
        replicas: 1
      placement:
        replicas: 2
      osapi:
        replicas: 2
      conductor:
        replicas: 2
      consoleauth:
        replicas: 2
      scheduler:
        replicas: 1
      novncproxy:
        replicas: 1
      endpoints:
        publicURLPrefix: "nova"
        novncURLPrefix: "novnc"
        placementURLPrefix: "placement"
      libvirt:
        # bare metal = kvm, VMs = qemu
        virtType: kvm
        # bare metal = host-passthrough or host-model, vm= none
        cpuMode: host-model
      auth:
        service:
          password: uYn4gU4AabT9YryEOGRLNNhQi
        db:
          password: Y1T83ux9qwYBSL0JagRY6zdus
        placement:
          password: X3hGdwQAb3uCF52Z2F2SmmIzk
        messaging:
          password: 1XT7LZT67Tai6jOhcL61oPU7p
        novaTest:
          password: 65dS7dG3YqGkDtlQ7RMKvl2Z2
    octavia:
      enabled: false
      chartName: octavia
      chartVersion: 20200903
      createService: true
      api:
        replicas: 2
      worker:
        replicas: 1
      housekeeping:
        replicas: 1
      endpoints:
        publicURLPrefix: "octavia"
      auth:
        service:
          password: tJ9IbvCcD1A9n0c7EVgSTlH0l
        db:
          password: Ve9wpsYuFjMwthJJdUGr8Jq8v
        messaging:
          password: hBCbkeyDzaZSkXVp6zUYB3649
        octaviaTest:
          password: GhZRI3GgFZAjhm2SiWmvAP97W
    openvswitch:
      enabled: true
      chartName: openvswitch
      chartVersion: 0.1.0
      createService: false
    radosgw:
      enabled: false
      chartName: ceph-rgw
      chartVersion: 0.1.0
      createService: true
      endpoints:
        publicURLPrefix: "radosgw"
      auth:
        service:
          password: lZcmrMgCOYFWe662PQAGdpwAT
    senlin:
      enabled: true
      chartName: senlin
      chartVersion: 20200903
      createService: true
      api:
        replicas: 2
      engine:
        replicas: 2
      endpoints:
        publicURLPrefix: "senlin"
      auth:
        service:
          password: I38z3W3AlcLKP7LEC97cK3O9x
        db:
          password: rCl1oRknvNxi9oP0cuF4Hd6lx
        messaging:
          password: s7uSI9fmGv47VM15wWC67hRpo
        senlinTest:
          password: oIRMBVj10GgJX8dSg6qmFBGGU
  rook:
    enabled: true
    namespace: rook-ceph
    common:
      enabled: true
    operator:
      enabled: true
      csiEnableCephFS: true
      csiEnableRBD: true
      csiEnableGRPC: true
      image: rook/ceph:v1.4.1
    cluster:
      enabled: true
      image: ceph/ceph:v15.2.4
      name: rook-ceph
      dataHostDir: /var/lib/rook
      mon:
        count: 3
        allowMultiplePerNode: false
      dashboard:
        enabled: false
        ssl: true
      monitoring:
        enabled: false
      storage:
        useAllNodes: true
        useAllDevices: true
    storageClassRBD:
      enabled: true
      name: rook-ceph-block
      failureDomain: host
      poolName: replicapool
      replicaLevel: 3
    storageClassObject:
      enabled: false
    storageClassFile:
      enabled: false
    toolbox:
      enabled: true
      name: rook-ceph-tools
      image: rook/ceph:v1.4.1
    objectStorage:
      enabled: false
      ingress:
        domain: s3.test.vanillastack.cloudical.net
        tls:
          enabled: true
          issuerName: "{{ letsEncrypt.issuerName }}"
      name: cephobjectn1
      failureDomain: host
      replicaLevel: 2
    filesystem:
      enabled: false
      name: cephfsn1
      replicaLevel: 2
      failureDomain: host
